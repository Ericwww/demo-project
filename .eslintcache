[{"E:\\react\\demo-project\\src\\index.js":"1","E:\\react\\demo-project\\src\\reportWebVitals.js":"2","E:\\react\\demo-project\\src\\App.js":"3","E:\\react\\demo-project\\src\\routes\\index.js":"4","E:\\react\\demo-project\\src\\views\\login\\index.js":"5","E:\\react\\demo-project\\src\\views\\admin\\homepage.js":"6","E:\\react\\demo-project\\src\\layout\\layout.js":"7","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js":"8","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js":"9","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js":"10"},{"size":622,"mtime":1607928990055,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":741,"mtime":1607912209979,"results":"14","hashOfConfig":"12"},{"size":825,"mtime":1607930010609,"results":"15","hashOfConfig":"12"},{"size":9003,"mtime":1607928257208,"results":"16","hashOfConfig":"12"},{"size":364,"mtime":1607928869007,"results":"17","hashOfConfig":"12"},{"size":2813,"mtime":1607938259407,"results":"18","hashOfConfig":"12"},{"size":2733,"mtime":1607935793567,"results":"19","hashOfConfig":"12"},{"size":254,"mtime":1607937920513,"results":"20","hashOfConfig":"12"},{"size":274,"mtime":1607937917766,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"380x10",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\demo-project\\src\\index.js",[],"E:\\react\\demo-project\\src\\reportWebVitals.js",[],["45","46"],"E:\\react\\demo-project\\src\\App.js",["47","48","49"],"E:\\react\\demo-project\\src\\routes\\index.js",[],"E:\\react\\demo-project\\src\\views\\login\\index.js",["50","51","52"],"import React, { Component } from 'react';\r\nimport './login.css'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport { UserOutlined, LockOutlined, HomeOutlined } from '@ant-design/icons';\r\n\r\n\r\nclass login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 0,\r\n            userTelephone: '',\r\n            userPassword: '',\r\n            userCode: '',\r\n            userAccount: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const userTelephone = localStorage.userTelephone\r\n        const userCode = localStorage.userCode\r\n        if (userTelephone === '15000000000' || userCode === '123123') {\r\n          this.goToLink()\r\n        }\r\n    }\r\n\r\n    usertelephoneCheck(e) {\r\n        this.setState({\r\n            userTelephone: e.target.value, \r\n        })\r\n    }\r\n    userpasswordCheck(e) {\r\n        this.setState({\r\n            userPassword: e.target.value,\r\n        })\r\n    }\r\n    usercodeCheck(e) {\r\n        this.setState({\r\n            userCode: e.target.value,\r\n        })\r\n    }\r\n    useraccountCheck(e) {\r\n        this.setState({\r\n            userAccount: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    this.goToLink(this);\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n\r\n    goToLink() {\r\n        if(localStorage.userTelephone = '15000000000'){\r\n            this.props.history.push('/admin/homepage')\r\n        } else if (localStorage.userCode === '123123'){\r\n            this.props.history.push('/admin/homepage')\r\n        } else {\r\n            if (this.state.userTelephone === '15000000000' && this.state.userPassword === '123') {\r\n                this.props.history.push('/admin/homepage')\r\n            } else if (this.state.userCode === '123456' && this.state.userAccount === 'admin' && this.state.userPassword === '123') {\r\n                this.props.history.push('/admin/homepage')\r\n            } else {\r\n                alert('请输入正确的登录信息！')\r\n            }\r\n        }\r\n    }\r\n\r\n    formRef = React.createRef();\r\n\r\n    loginType() {\r\n        if (this.state.type === 0)\r\n        {\r\n            return this.telephoneLogin()\r\n        }\r\n        if (this.state.type === 1)\r\n        {\r\n            return this.accountLogin()\r\n        }\r\n        \r\n    }\r\n\r\n    telephoneLogin=()=> {\r\n        return (\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-telephone'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='telephone'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='手机号'\r\n                          value={this.state.userTelephone}\r\n                          onChange={this.usertelephoneCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    accountLogin=()=> {\r\n        return(\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-account'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='code'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入工厂代码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<HomeOutlined className='site-form-item-icon' />} \r\n                          placeholder='工厂代码'\r\n                          value={this.state.userCode}\r\n                          onChange={this.usercodeCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='account'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入账号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='账号'\r\n                          value={this.state.userAccount}\r\n                          onChange={this.useraccountCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='loginarea'>\r\n                <div className='loginlogo' />\r\n                <div className='login-form'>\r\n                    <div className='login-header'>\r\n                        <div className='login-title'>\r\n                            登录小工单\r\n                        </div>\r\n                    </div>\r\n                    <div className='login-content'>\r\n                        <div className='login-type'>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 0})}} \r\n                              style={this.state.type === 0 ? {color:'blue'}:{}}>\r\n                              手机号登录</a>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 1})}}\r\n                              style={this.state.type === 1 ? {color:'blue'}:{}}>\r\n                              工厂账号登录</a>\r\n                        </div>\r\n                        {this.loginType()}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default login;","E:\\react\\demo-project\\src\\views\\admin\\homepage.js",["53","54"],"import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\nimport layout from '../../layout/layout';\r\n\r\nconst element = <layout name=\"主页\"/>\r\n\r\nclass homepage extends Component {\r\n    \r\n    render() { \r\n        return (\r\n            <div>\r\n                <h1>zhuye</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default homepage;","E:\\react\\demo-project\\src\\layout\\layout.js",["55","56"],"E:\\react\\demo-project\\src\\views\\admin\\wuliao.js",["57"],"E:\\react\\demo-project\\src\\views\\admin\\gongxu.js",["58"],"E:\\react\\demo-project\\src\\views\\admin\\gongdan.js",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":8,"nodeType":"66","messageId":"67","endLine":1,"endColumn":12},{"ruleId":"64","severity":1,"message":"68","line":3,"column":8,"nodeType":"66","messageId":"67","endLine":3,"endColumn":13},{"ruleId":"64","severity":1,"message":"69","line":3,"column":17,"nodeType":"66","messageId":"67","endLine":3,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":62,"column":12,"nodeType":"72","messageId":"73","endLine":62,"endColumn":54},{"ruleId":"74","severity":1,"message":"75","line":223,"column":29,"nodeType":"76","endLine":225,"endColumn":81},{"ruleId":"74","severity":1,"message":"75","line":227,"column":29,"nodeType":"76","endLine":229,"endColumn":81},{"ruleId":"64","severity":1,"message":"77","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},{"ruleId":"64","severity":1,"message":"78","line":5,"column":7,"nodeType":"66","messageId":"67","endLine":5,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"79","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":41,"column":48,"nodeType":"76","endLine":41,"endColumn":125},{"ruleId":"64","severity":1,"message":"77","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},{"ruleId":"64","severity":1,"message":"77","line":2,"column":10,"nodeType":"66","messageId":"67","endLine":2,"endColumn":20},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Reacr' is defined but never used.","'Component' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Breadcrumb' is defined but never used.","'element' is assigned a value but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]