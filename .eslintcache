[{"E:\\react\\demo-project\\src\\index.js":"1","E:\\react\\demo-project\\src\\reportWebVitals.js":"2","E:\\react\\demo-project\\src\\App.js":"3","E:\\react\\demo-project\\src\\routes\\index.js":"4","E:\\react\\demo-project\\src\\views\\login\\index.js":"5","E:\\react\\demo-project\\src\\views\\admin\\homepage.js":"6","E:\\react\\demo-project\\src\\layout\\layout.js":"7","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js":"8","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js":"9","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js":"10","E:\\react\\demo-project\\src\\views\\admin\\danwei.js":"11","E:\\react\\demo-project\\src\\views\\admin\\cipin.js":"12","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js":"13","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js":"14","E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js":"15","E:\\react\\demo-project\\src\\api\\index.js":"16"},{"size":622,"mtime":1607928990055,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":756,"mtime":1608114200851,"results":"20","hashOfConfig":"18"},{"size":1730,"mtime":1608105769942,"results":"21","hashOfConfig":"18"},{"size":8879,"mtime":1608114132252,"results":"22","hashOfConfig":"18"},{"size":473,"mtime":1608118767680,"results":"23","hashOfConfig":"18"},{"size":3519,"mtime":1608113930749,"results":"24","hashOfConfig":"18"},{"size":3112,"mtime":1608031786040,"results":"25","hashOfConfig":"18"},{"size":2814,"mtime":1608031761683,"results":"26","hashOfConfig":"18"},{"size":281,"mtime":1608000306752,"results":"27","hashOfConfig":"18"},{"size":4230,"mtime":1608031750290,"results":"28","hashOfConfig":"18"},{"size":4517,"mtime":1608031807622,"results":"29","hashOfConfig":"18"},{"size":8553,"mtime":1608124194902,"results":"30","hashOfConfig":"18"},{"size":3694,"mtime":1608023332067,"results":"31","hashOfConfig":"18"},{"size":4888,"mtime":1608025557459,"results":"32","hashOfConfig":"18"},{"size":3476,"mtime":1608118509379,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"380x10",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\demo-project\\src\\index.js",[],["73","74"],"E:\\react\\demo-project\\src\\reportWebVitals.js",[],"E:\\react\\demo-project\\src\\App.js",["75","76","77","78"],"E:\\react\\demo-project\\src\\routes\\index.js",[],"E:\\react\\demo-project\\src\\views\\login\\index.js",["79","80"],"E:\\react\\demo-project\\src\\views\\admin\\homepage.js",["81"],"E:\\react\\demo-project\\src\\layout\\layout.js",["82","83"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb, Dropdown } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { mainRoutes } from '../routes/index'\r\nimport {\r\n    SolutionOutlined,\r\n    LaptopOutlined,\r\n    ReadOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport './layout.css'\r\n\r\nconst { Sider, Content, Header } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nfunction layout(props) {\r\n    const logout = ( \r\n        <Menu>\r\n            <Menu.Item key='logOut'>\r\n                <Link \r\n                  to=\"/login\" \r\n                  onClick={()=>{localStorage.removeItem('auth')}}\r\n                >退出\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n  \r\n    const routes = mainRoutes\r\n    function itemRender(route, params, routes, paths) {\r\n        \r\n        // const last = routes.indexOf(route) === routes.length - 1;\r\n        // return last ? (\r\n        //   <span>{route.breadcrumbName}</span>\r\n        // ) : (\r\n        //   <Link to={paths.join(\"/\")}>{route.breadcrumbName}</Link>\r\n        // );\r\n        if (props.children._owner.pendingProps.location.pathname === route.path) {\r\n            return(<span>{route.breadcrumbName}</span>)\r\n        }\r\n      }\r\n    \r\n      \r\n    \r\n    return (\r\n        <Layout style={{minHeight: '100vh' }}>\r\n            <Sider>\r\n                <div className='logo'>\r\n                    小工单\r\n                </div>\r\n                <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\r\n                    <Menu.Item key='1' icon={<SolutionOutlined />}>\r\n                        <Link to=\"/admin/homepage\">\r\n                            主页\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key='sub1' icon={<LaptopOutlined />} title='生产管理'>\r\n                        <Menu.Item key='2'><Link to=\"/admin/gongdan\">工单</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub2' icon={<ReadOutlined />} title='基础数据'>\r\n                        <Menu.Item key='3'><Link to=\"/admin/wuliao\">物料</Link></Menu.Item>\r\n                        <Menu.Item key='4'><Link to=\"/admin/gongxu\">工序</Link></Menu.Item>\r\n                        <Menu.Item key='5'><Link to=\"/admin/danwei\">单位</Link></Menu.Item>\r\n                        <Menu.Item key='6'><Link to=\"/admin/cipin\">次品项</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub3' icon={<LaptopOutlined />} title='系统配置'>\r\n                        <Menu.Item key='7'><Link to=\"/admin/yonghu\">用户</Link></Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className='container'>\r\n                <Header className='site-header'>               \r\n                    <Breadcrumb className='site-breadcrumb' itemRender={itemRender} routes={routes} />\r\n                    <Dropdown overlay={logout}>\r\n                        <div>\r\n                            <UserOutlined />\r\n                            <span>系统管理员</span>\r\n                        </div>\r\n                    </Dropdown>\r\n                </Header>\r\n                <Content>\r\n                    <div>\r\n                        {props.children}\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n    \r\n}\r\n\r\nexport default layout","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js",["84","85"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Space } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport 'antd/dist/antd.css';\r\n\r\nclass wuliao extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '编号',\r\n                dataIndex: 'number',\r\n            }, {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '规格',\r\n                dataIndex: 'specs',\r\n            }, {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n            }, {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n            }, {\r\n                title: '创建人',\r\n                dataIndex: 'createperson',\r\n            }, {\r\n                title: '最后更新时间',\r\n                dataIndex: 'updatetime',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchwuliao'>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>编号 </label>\r\n                        <Input placeholder=\"请输入编号\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchmodel'>\r\n                        <label htmlFor='name'>规格 </label>\r\n                        <Input placeholder=\"请输入规格\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createwuliao'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />}\r\n                      onClick={()=>{this.props.history.push(\"/admin/wuliaocreate\")}}\r\n                    >创建物料</Button>\r\n                </div>\r\n                <div className='wuliaotable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default wuliao;","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js",["86","87"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Space } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport 'antd/dist/antd.css';\r\n\r\nclass gongxu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '工序编号',\r\n                dataIndex: 'number',\r\n            }, {\r\n                title: '工序名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '报工权限',\r\n                dataIndex: 'premission',\r\n            }, {\r\n                title: '报工数配比',\r\n                dataIndex: 'matching',\r\n            }, {\r\n                title: '次品项列表',\r\n                dataIndex: 'cipintable',\r\n            }, {\r\n                title: '工序采集数据',\r\n                dataIndex: 'collectdata',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                  )\r\n            }],\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchgongxu'>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>工序编号 </label>\r\n                        <Input placeholder=\"请输入工序编号\" style={{ width: '75%' }} />\r\n                    </div>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>工序名称 </label>\r\n                        <Input placeholder=\"请输入工序名称\" style={{ width: '75%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='creategongxu'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />}\r\n                      onClick={()=>{this.props.history.push(\"/admin/gongxucreate\")}}\r\n                    >创建工序</Button>\r\n                </div>\r\n                <div className='gongxutable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default gongxu;","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js",["88"],"import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\n\r\nclass gongdan extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                gongdan\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default gongdan;","E:\\react\\demo-project\\src\\views\\admin\\danwei.js",["89","90"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Form, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\n\r\nconst { TextArea } = Input\r\n\r\nclass danwei extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '备注',\r\n                dataIndex: 'comment'\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n        }\r\n    }\r\n\r\n    openModalAddInfo = (type)=>{\r\n        this.setState({modalAddInfoVisible: true})\r\n    }\r\n\r\n    handleOk=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    \r\n                    this.setState({modalAddInfoVisible: false});\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n    \r\n    formRef = React.createRef();\r\n\r\n    render() { \r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchdanwei'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input placeholder=\"请输入编号\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createdanwei'>\r\n                    <Button type='primary' icon={<PlusCircleOutlined />} onClick={()=>this.openModalAddInfo(\"modalAddInfo\")}>创建单位</Button>\r\n                    <Modal \r\n                      visible={this.state.modalAddInfoVisible} \r\n                      title=\"创建单位\" \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.setState({modalAddInfoVisible: false})}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <Form ref={this.formRef} name='input-ref'>\r\n                            <FormItem \r\n                              name='danweiname'\r\n                              label='名称 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入名称',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input placeholder=\"请输入\"/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='danweibeizhu'\r\n                              label='备注 '\r\n                            >\r\n                            <TextArea rows={4} />\r\n                            </FormItem>\r\n                        </Form>    \r\n                    </Modal>\r\n                </div>\r\n                <div className='danweitable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default danwei;","E:\\react\\demo-project\\src\\views\\admin\\cipin.js",["91","92"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Form, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\n\r\nclass cipin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '次品项编号',\r\n                dataIndex: 'code',\r\n            }, {\r\n                title: '次品项名称',\r\n                dataIndex: 'name'\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n        }\r\n    }\r\n\r\n    openModalAddInfo = (type)=>{\r\n        this.setState({modalAddInfoVisible: true})\r\n    }\r\n\r\n    handleOk=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    \r\n                    this.setState({modalAddInfoVisible: false});\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n    \r\n    formRef = React.createRef();\r\n\r\n    render() {\r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchcipin'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input placeholder=\"请输入编号\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createcipin'>\r\n                    <Button type='primary' icon={<PlusCircleOutlined />} onClick={()=>this.openModalAddInfo(\"modalAddInfo\")}>创建次品项</Button>\r\n                    <Modal \r\n                      visible={this.state.modalAddInfoVisible} \r\n                      title=\"创建次品项\" \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.setState({modalAddInfoVisible: false})}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <Form ref={this.formRef} name='input-ref'>\r\n                            <FormItem \r\n                              name='cipincode'\r\n                              label='次品项编号 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入次品项编号',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input placeholder=\"请输入\"/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='cipinname'\r\n                              label='次品项名称 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入次品项名称',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input placeholder=\"请输入\"/>\r\n                            </FormItem>\r\n                        </Form>    \r\n                    </Modal>\r\n                </div>\r\n                <div className='cipintable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default cipin;","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js",["93","94","95"],"E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js",[],"E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js",[],"E:\\react\\demo-project\\src\\api\\index.js",["96"],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":12},{"ruleId":"101","severity":1,"message":"105","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},{"ruleId":"101","severity":1,"message":"106","line":3,"column":17,"nodeType":"103","messageId":"104","endLine":3,"endColumn":26},{"ruleId":"101","severity":1,"message":"107","line":4,"column":25,"nodeType":"103","messageId":"104","endLine":4,"endColumn":33},{"ruleId":"108","severity":1,"message":"109","line":227,"column":29,"nodeType":"110","endLine":229,"endColumn":81},{"ruleId":"108","severity":1,"message":"109","line":231,"column":29,"nodeType":"110","endLine":233,"endColumn":81},{"ruleId":"101","severity":1,"message":"111","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":15},{"ruleId":"101","severity":1,"message":"106","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"112","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":45,"column":21,"nodeType":"110","endLine":45,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":46,"column":21,"nodeType":"110","endLine":46,"endColumn":98},{"ruleId":"108","severity":1,"message":"109","line":41,"column":21,"nodeType":"110","endLine":41,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":42,"column":21,"nodeType":"110","endLine":42,"endColumn":98},{"ruleId":"101","severity":1,"message":"113","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":33,"column":21,"nodeType":"110","endLine":33,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":34,"column":21,"nodeType":"110","endLine":34,"endColumn":98},{"ruleId":"108","severity":1,"message":"109","line":31,"column":21,"nodeType":"110","endLine":31,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":32,"column":21,"nodeType":"110","endLine":32,"endColumn":98},{"ruleId":"101","severity":1,"message":"114","line":9,"column":19,"nodeType":"103","messageId":"104","endLine":9,"endColumn":30},{"ruleId":"108","severity":1,"message":"109","line":45,"column":21,"nodeType":"110","endLine":45,"endColumn":43},{"ruleId":"108","severity":1,"message":"109","line":46,"column":21,"nodeType":"110","endLine":46,"endColumn":98},{"ruleId":"101","severity":1,"message":"115","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":10},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Reacr' is defined but never used.","'Component' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'login' is defined but never used.","'ReactDOM' is defined but never used.","'Breadcrumb' is defined but never used.","'getUserInfo' is defined but never used.","'qs' is defined but never used.","no-global-assign","no-unsafe-negation"]