[{"E:\\react\\demo-project\\src\\index.js":"1","E:\\react\\demo-project\\src\\reportWebVitals.js":"2","E:\\react\\demo-project\\src\\App.js":"3","E:\\react\\demo-project\\src\\routes\\index.js":"4","E:\\react\\demo-project\\src\\views\\login\\index.js":"5","E:\\react\\demo-project\\src\\views\\admin\\homepage.js":"6","E:\\react\\demo-project\\src\\layout\\layout.js":"7","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js":"8","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js":"9","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js":"10","E:\\react\\demo-project\\src\\views\\admin\\danwei.js":"11","E:\\react\\demo-project\\src\\views\\admin\\cipin.js":"12","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js":"13","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js":"14","E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js":"15","E:\\react\\demo-project\\src\\api\\index.js":"16"},{"size":622,"mtime":1607928990055,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":675,"mtime":1608187799691,"results":"20","hashOfConfig":"18"},{"size":1730,"mtime":1608105769942,"results":"21","hashOfConfig":"18"},{"size":8969,"mtime":1608185789225,"results":"22","hashOfConfig":"18"},{"size":473,"mtime":1608118767680,"results":"23","hashOfConfig":"18"},{"size":3484,"mtime":1608187782346,"results":"24","hashOfConfig":"18"},{"size":3112,"mtime":1608031786040,"results":"25","hashOfConfig":"18"},{"size":2814,"mtime":1608031761683,"results":"26","hashOfConfig":"18"},{"size":281,"mtime":1608000306752,"results":"27","hashOfConfig":"18"},{"size":8334,"mtime":1608292174773,"results":"28","hashOfConfig":"18"},{"size":4517,"mtime":1608031807622,"results":"29","hashOfConfig":"18"},{"size":8626,"mtime":1608188058574,"results":"30","hashOfConfig":"18"},{"size":3694,"mtime":1608023332067,"results":"31","hashOfConfig":"18"},{"size":4888,"mtime":1608025557459,"results":"32","hashOfConfig":"18"},{"size":3177,"mtime":1608285071697,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"380x10",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\react\\demo-project\\src\\index.js",[],["75","76"],"E:\\react\\demo-project\\src\\reportWebVitals.js",[],"E:\\react\\demo-project\\src\\App.js",[],"E:\\react\\demo-project\\src\\routes\\index.js",[],"E:\\react\\demo-project\\src\\views\\login\\index.js",["77","78"],"import React, { Component } from 'react';\r\nimport './login.css'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport { UserOutlined, LockOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { getUserInfo, login } from '../../api/index'\r\nimport JsSha from 'jssha';\r\n\r\nexport const hashPassword = (password) => {\r\n    const sha = new JsSha('SHA3-224', 'TEXT');\r\n    sha.update(password);\r\n    return sha.getHash('HEX');\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 0,\r\n            userTelephone: '',\r\n            userPassword: '',\r\n            userCode: '',\r\n            userAccount: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('auth')) {\r\n            this.props.history.push('/admin/homepage')\r\n        }\r\n    }\r\n\r\n    usertelephoneCheck(e) {\r\n        this.setState({\r\n            userTelephone: e.target.value, \r\n        })\r\n    }\r\n    userpasswordCheck(e) {\r\n        this.setState({\r\n            userPassword: e.target.value,\r\n        })\r\n    }\r\n    usercodeCheck(e) {\r\n        this.setState({\r\n            userCode: e.target.value,\r\n        })\r\n    }\r\n    useraccountCheck(e) {\r\n        this.setState({\r\n            userAccount: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    this.goToLink(this);\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n\r\n    goToLink() {\r\n        const data={}\r\n        data.type=this.state.type\r\n        data.code=this.state.userCode\r\n        data.username=this.state.userAccount\r\n        data.phone=this.state.userTelephone\r\n        data.password=hashPassword(this.state.userPassword)\r\n        login(data).then(res=>{\r\n            const { data } = res\r\n            localStorage.setItem(\"auth\", data)\r\n            console.log(data)\r\n            this.props.history.push('/admin/homepage')\r\n        })\r\n        getUserInfo().then(res=>{\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    formRef = React.createRef();\r\n\r\n    loginType() {\r\n        if (this.state.type === 0)\r\n        {\r\n            return this.telephoneLogin()\r\n        }\r\n        if (this.state.type === 1)\r\n        {\r\n            return this.accountLogin()\r\n        }\r\n        \r\n    }\r\n\r\n    telephoneLogin=()=> {\r\n        return (\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-telephone'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='telephone'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='手机号'\r\n                          value={this.state.userTelephone}\r\n                          onChange={this.usertelephoneCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    accountLogin=()=> {\r\n        return(\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-account'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='code'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入工厂代码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<HomeOutlined className='site-form-item-icon' />} \r\n                          placeholder='工厂代码'\r\n                          value={this.state.userCode}\r\n                          onChange={this.usercodeCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='account'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入账号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='账号'\r\n                          value={this.state.userAccount}\r\n                          onChange={this.useraccountCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='loginarea'>\r\n                <div className='loginlogo' />\r\n                <div className='login-form'>\r\n                    <div className='login-header'>\r\n                        <div className='login-title'>\r\n                            登录小工单\r\n                        </div>\r\n                    </div>\r\n                    <div className='login-content'>\r\n                        <div className='login-type'>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 0})}} \r\n                              style={this.state.type === 0 ? {color:'blue'}:{}}>\r\n                              手机号登录</a>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 1})}}\r\n                              style={this.state.type === 1 ? {color:'blue'}:{}}>\r\n                              工厂账号登录</a>\r\n                        </div>\r\n                        {this.loginType()}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","E:\\react\\demo-project\\src\\views\\admin\\homepage.js",["79"],"import React, { Component } from 'react';\r\nimport { login } from '../../api/index'\r\nimport JsSha from 'jssha';\r\n\r\nexport const hashPassword = (password) => {\r\n    const sha = new JsSha('SHA3-224', 'TEXT');\r\n    sha.update(password);\r\n    return sha.getHash('HEX');\r\n};\r\n\r\nclass homepage extends Component {\r\n\r\n    \r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h1>zhuye</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default homepage;","E:\\react\\demo-project\\src\\layout\\layout.js",["80"],"import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb, Dropdown } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { mainRoutes } from '../routes/index'\r\nimport {\r\n    SolutionOutlined,\r\n    LaptopOutlined,\r\n    ReadOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport './layout.css'\r\n\r\nconst { Sider, Content, Header } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nfunction layout(props) {\r\n    const logout = ( \r\n        <Menu>\r\n            <Menu.Item key='logOut'>\r\n                <Link \r\n                  to=\"/login\" \r\n                  onClick={()=>{localStorage.removeItem('auth')}}\r\n                >退出\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n  \r\n    const routes = mainRoutes\r\n    function itemRender(route, params, routes, paths) {\r\n        \r\n        // const last = routes.indexOf(route) === routes.length - 1;\r\n        // return last ? (\r\n        //   <span>{route.breadcrumbName}</span>\r\n        // ) : (\r\n        //   <Link to={paths.join(\"/\")}>{route.breadcrumbName}</Link>\r\n        // );\r\n        if (props.children._owner.pendingProps.location.pathname === route.path) {\r\n            return(<span>{route.breadcrumbName}</span>)\r\n        }\r\n      }\r\n    \r\n      \r\n    \r\n    return (\r\n        <Layout style={{minHeight: '100vh' }}>\r\n            <Sider>\r\n                <div className='logo'>\r\n                    小工单\r\n                </div>\r\n                <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\r\n                    <Menu.Item key='1' icon={<SolutionOutlined />}>\r\n                        <Link to=\"/admin/homepage\">\r\n                            主页\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key='sub1' icon={<LaptopOutlined />} title='生产管理'>\r\n                        <Menu.Item key='2'><Link to=\"/admin/gongdan\">工单</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub2' icon={<ReadOutlined />} title='基础数据'>\r\n                        <Menu.Item key='3'><Link to=\"/admin/wuliao\">物料</Link></Menu.Item>\r\n                        <Menu.Item key='4'><Link to=\"/admin/gongxu\">工序</Link></Menu.Item>\r\n                        <Menu.Item key='5'><Link to=\"/admin/danwei\">单位</Link></Menu.Item>\r\n                        <Menu.Item key='6'><Link to=\"/admin/cipin\">次品项</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub3' icon={<LaptopOutlined />} title='系统配置'>\r\n                        <Menu.Item key='7'><Link to=\"/admin/yonghu\">用户</Link></Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className='container'>\r\n                <Header className='site-header'>               \r\n                    <Breadcrumb className='site-breadcrumb' itemRender={itemRender} routes={routes} />\r\n                    <Dropdown overlay={logout}>\r\n                        <div>\r\n                            <UserOutlined />\r\n                            <span>系统管理员</span>\r\n                        </div>\r\n                    </Dropdown>\r\n                </Header>\r\n                <Content>\r\n                    <div>\r\n                        {props.children}\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n    \r\n}\r\n\r\nexport default layout","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js",["81","82"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Space } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport 'antd/dist/antd.css';\r\n\r\nclass wuliao extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '编号',\r\n                dataIndex: 'number',\r\n            }, {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '规格',\r\n                dataIndex: 'specs',\r\n            }, {\r\n                title: '单位',\r\n                dataIndex: 'unit',\r\n            }, {\r\n                title: '创建时间',\r\n                dataIndex: 'createtime',\r\n            }, {\r\n                title: '创建人',\r\n                dataIndex: 'createperson',\r\n            }, {\r\n                title: '最后更新时间',\r\n                dataIndex: 'updatetime',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchwuliao'>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>编号 </label>\r\n                        <Input placeholder=\"请输入编号\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchmodel'>\r\n                        <label htmlFor='name'>规格 </label>\r\n                        <Input placeholder=\"请输入规格\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createwuliao'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />}\r\n                      onClick={()=>{this.props.history.push(\"/admin/wuliaocreate\")}}\r\n                    >创建物料</Button>\r\n                </div>\r\n                <div className='wuliaotable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default wuliao;","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js",["83","84"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Space } from 'antd';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport 'antd/dist/antd.css';\r\n\r\nclass gongxu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '工序编号',\r\n                dataIndex: 'number',\r\n            }, {\r\n                title: '工序名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '报工权限',\r\n                dataIndex: 'premission',\r\n            }, {\r\n                title: '报工数配比',\r\n                dataIndex: 'matching',\r\n            }, {\r\n                title: '次品项列表',\r\n                dataIndex: 'cipintable',\r\n            }, {\r\n                title: '工序采集数据',\r\n                dataIndex: 'collectdata',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                  )\r\n            }],\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchgongxu'>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>工序编号 </label>\r\n                        <Input placeholder=\"请输入工序编号\" style={{ width: '75%' }} />\r\n                    </div>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>工序名称 </label>\r\n                        <Input placeholder=\"请输入工序名称\" style={{ width: '75%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='creategongxu'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />}\r\n                      onClick={()=>{this.props.history.push(\"/admin/gongxucreate\")}}\r\n                    >创建工序</Button>\r\n                </div>\r\n                <div className='gongxutable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default gongxu;","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js",["85"],"import React, { Component } from 'react';\r\nimport { Breadcrumb } from 'antd';\r\n\r\nclass gongdan extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div>\r\n                gongdan\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default gongdan;","E:\\react\\demo-project\\src\\views\\admin\\danwei.js",["86","87"],"E:\\react\\demo-project\\src\\views\\admin\\cipin.js",["88","89"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Form, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\n\r\nclass cipin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '次品项编号',\r\n                dataIndex: 'code',\r\n            }, {\r\n                title: '次品项名称',\r\n                dataIndex: 'name'\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n        }\r\n    }\r\n\r\n    openModalAddInfo = (type)=>{\r\n        this.setState({modalAddInfoVisible: true})\r\n    }\r\n\r\n    handleOk=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    \r\n                    this.setState({modalAddInfoVisible: false});\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n    \r\n    formRef = React.createRef();\r\n\r\n    render() {\r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchcipin'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input placeholder=\"请输入编号\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createcipin'>\r\n                    <Button type='primary' icon={<PlusCircleOutlined />} onClick={()=>this.openModalAddInfo(\"modalAddInfo\")}>创建次品项</Button>\r\n                    <Modal \r\n                      visible={this.state.modalAddInfoVisible} \r\n                      title=\"创建次品项\" \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.setState({modalAddInfoVisible: false})}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <Form ref={this.formRef} name='input-ref'>\r\n                            <FormItem \r\n                              name='cipincode'\r\n                              label='次品项编号 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入次品项编号',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input placeholder=\"请输入\"/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='cipinname'\r\n                              label='次品项名称 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入次品项名称',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input placeholder=\"请输入\"/>\r\n                            </FormItem>\r\n                        </Form>    \r\n                    </Modal>\r\n                </div>\r\n                <div className='cipintable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default cipin;","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js",["90","91"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Select, Modal, Form, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { addUser, getUserInfo } from '../../api/index'\r\n\r\nconst { Option } = Select\r\n\r\nclass yonghu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n            }, {\r\n                title: '账号',\r\n                dataIndex: 'username',\r\n            }, {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '手机号',\r\n                dataIndex: 'phone',\r\n            }, {\r\n                title: '角色',\r\n                dataIndex: 'role',\r\n            }, {\r\n                title: '虚拟账户',\r\n                dataIndex: 'fake',\r\n            }, {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space>\r\n                    <a data-index={index}>编辑</a>  \r\n                    <a data-index={index} onClick={this.deleteItem.bind(this,text,record,index)}>Delete</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            username: '',\r\n            name: '',\r\n            phone: '',\r\n            fake: false,\r\n            roleIds: [0],\r\n        }\r\n    }\r\n\r\n    \r\n    openModalAddInfo = (type)=>{\r\n        this.setState({modalAddInfoVisible: true})\r\n    }\r\n\r\n    handleOk=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    this.addNewuser(this);\r\n                    this.setState({modalAddInfoVisible: false});\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    \r\n\r\n    addNewuser() {\r\n        const data={}\r\n        data.username=this.state.username\r\n        data.name=this.state.name\r\n        data.phone=this.state.phone\r\n        data.fake=this.state.fake\r\n        data.roleIds=this.state.roleIds\r\n        addUser(data).then(res=>{\r\n            const { data } = res\r\n            localStorage.setItem(\"auth\", data)\r\n            console.log(data)\r\n        })\r\n        getUserInfo().then(res=>{\r\n          console.log(res)\r\n      })\r\n    }\r\n    \r\n    formRef = React.createRef();\r\n\r\n    usernameInput(e) {\r\n      this.setState({\r\n        username: e.target.value,\r\n      })\r\n    }\r\n    nameInput(e) {\r\n      this.setState({\r\n        name: e.target.value,\r\n      })\r\n    }\r\n    phoneInput(e) {\r\n      this.setState({\r\n        phone: e.target.value,\r\n      })\r\n    }\r\n    // fakeSelect(e) {\r\n    //   this.setState({\r\n    //     fake: e.target.value,\r\n    //   })\r\n    // }\r\n\r\n    render() { \r\n        let data = this.state.data\r\n        let columns = this.state.columns\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchyonghu'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>姓名 </label>\r\n                        <Input placeholder=\"请输入名称\" style={{ width: '85%' }} />\r\n                    </div>\r\n                    <div className='selectstatus'>\r\n                        <label htmlFor='name'>状态 </label>\r\n                        <Select defaultValue=\"all\" style={{ width: 182 }}>\r\n                            <Option value=\"all\">全部</Option>\r\n                            <Option value=\"start\">启用中</Option>\r\n                            <Option value=\"stop\">停用中</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Button type='primary' icon={<SearchOutlined />}>查询</Button>\r\n                </div>\r\n                <div className='createyonghu'>\r\n                    <Button type='primary' onClick={()=>this.openModalAddInfo(\"modalAddInfo\")} >新增用户</Button>\r\n                    <Modal \r\n                      visible={this.state.modalAddInfoVisible} \r\n                      title=\"新增用户\" \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.setState({modalAddInfoVisible: false})}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <Form ref={this.formRef} name='input-ref'>\r\n                            <FormItem \r\n                              name='yonghuaccount'\r\n                              label='账号 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入账号',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={this.state.username}\r\n                              onChange={this.usernameInput.bind(this)} />\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='yonghuname'\r\n                              label='姓名 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '请输入姓名',\r\n                                },\r\n                              ]}\r\n                            >\r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={this.state.name}\r\n                              onChange={this.nameInput.bind(this)}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='yonghutelephone'\r\n                              label='手机号 '\r\n                            >  \r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={this.state.phone}\r\n                              onChange={this.phoneInput.bind(this)}/>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='yonnghurole'\r\n                              label='角色 '\r\n                              rules={[\r\n                                {\r\n                                  required: true,\r\n                                  message: '角色不能为空',\r\n                                },\r\n                              ]}\r\n                            >  \r\n                            <Select\r\n                              mode=\"multiple\"\r\n                              allowClear\r\n                              placeholder=\"请选择\"\r\n                              // value={this.state.roleIds}\r\n                            >\r\n                                <Option value=\"1\">轻量-管理员</Option>\r\n                                <Option value=\"2\">轻量-计划员</Option>\r\n                                <Option value=\"3\">轻量-生产人员</Option>\r\n                                <Option value=\"4\">用户账号管理员</Option>\r\n                            </Select>\r\n                            </FormItem>\r\n                            <FormItem\r\n                              name='yonghuvirtual'\r\n                              label='虚拟用户 '\r\n                            >  \r\n                            <Select \r\n                              // value={this.state.fake}\r\n                              // onChange={this.fakeSelect.bind(this)}\r\n                            >\r\n                                <Option value={true}>是</Option>\r\n                                <Option value={false}>否</Option>\r\n                            </Select>\r\n                            </FormItem>\r\n                        </Form>    \r\n                    </Modal>\r\n                </div>\r\n                <div className='yonghutable'>\r\n                    <Table columns={columns} dataSource={data} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default yonghu;","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js",[],"E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js",[],"E:\\react\\demo-project\\src\\api\\index.js",["92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":230,"column":29,"nodeType":"99","endLine":232,"endColumn":81},{"ruleId":"97","severity":1,"message":"98","line":234,"column":29,"nodeType":"99","endLine":236,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":15},{"ruleId":"100","severity":1,"message":"104","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":45,"column":21,"nodeType":"99","endLine":45,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":46,"column":21,"nodeType":"99","endLine":46,"endColumn":98},{"ruleId":"97","severity":1,"message":"98","line":41,"column":21,"nodeType":"99","endLine":41,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":42,"column":21,"nodeType":"99","endLine":42,"endColumn":98},{"ruleId":"100","severity":1,"message":"105","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"98","line":37,"column":21,"nodeType":"99","endLine":40,"endColumn":24},{"ruleId":"97","severity":1,"message":"98","line":75,"column":21,"nodeType":"99","endLine":77,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":31,"column":21,"nodeType":"99","endLine":31,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":32,"column":21,"nodeType":"99","endLine":32,"endColumn":98},{"ruleId":"97","severity":1,"message":"98","line":45,"column":21,"nodeType":"99","endLine":45,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":46,"column":21,"nodeType":"99","endLine":46,"endColumn":98},{"ruleId":"106","severity":1,"message":"107","line":116,"column":20,"nodeType":"108","messageId":"109","endLine":116,"endColumn":51},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'Breadcrumb' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","no-global-assign","no-unsafe-negation"]