[{"E:\\react\\demo-project\\src\\index.js":"1","E:\\react\\demo-project\\src\\reportWebVitals.js":"2","E:\\react\\demo-project\\src\\App.js":"3","E:\\react\\demo-project\\src\\routes\\index.js":"4","E:\\react\\demo-project\\src\\views\\login\\index.js":"5","E:\\react\\demo-project\\src\\views\\admin\\homepage.js":"6","E:\\react\\demo-project\\src\\layout\\layout.js":"7","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js":"8","E:\\react\\demo-project\\src\\views\\admin\\gongxu.js":"9","E:\\react\\demo-project\\src\\views\\admin\\gongdan.js":"10","E:\\react\\demo-project\\src\\views\\admin\\danwei.js":"11","E:\\react\\demo-project\\src\\views\\admin\\cipin.js":"12","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js":"13","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js":"14","E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js":"15","E:\\react\\demo-project\\src\\api\\index.js":"16"},{"size":622,"mtime":1607928990055,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":735,"mtime":1608708461316,"results":"20","hashOfConfig":"18"},{"size":1744,"mtime":1608716467786,"results":"21","hashOfConfig":"18"},{"size":9085,"mtime":1608367274062,"results":"22","hashOfConfig":"18"},{"size":473,"mtime":1608118767680,"results":"23","hashOfConfig":"18"},{"size":3484,"mtime":1608187782346,"results":"24","hashOfConfig":"18"},{"size":7291,"mtime":1608724146940,"results":"25","hashOfConfig":"18"},{"size":6187,"mtime":1608724557027,"results":"26","hashOfConfig":"18"},{"size":4252,"mtime":1608732930541,"results":"27","hashOfConfig":"18"},{"size":7499,"mtime":1608553490002,"results":"28","hashOfConfig":"18"},{"size":7665,"mtime":1608548836428,"results":"29","hashOfConfig":"18"},{"size":10403,"mtime":1608706303168,"results":"30","hashOfConfig":"18"},{"size":6049,"mtime":1608707739072,"results":"31","hashOfConfig":"18"},{"size":6110,"mtime":1608724396570,"results":"32","hashOfConfig":"18"},{"size":6325,"mtime":1608729648501,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"380x10",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\demo-project\\src\\index.js",[],["74","75"],"E:\\react\\demo-project\\src\\reportWebVitals.js",[],"E:\\react\\demo-project\\src\\App.js",[],"E:\\react\\demo-project\\src\\routes\\index.js",[],"E:\\react\\demo-project\\src\\views\\login\\index.js",["76","77"],"import React, { Component } from 'react';\r\nimport './login.css'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport { UserOutlined, LockOutlined, HomeOutlined } from '@ant-design/icons';\r\nimport { getUserInfo, login } from '../../api/index'\r\nimport JsSha from 'jssha';\r\n\r\nexport const hashPassword = (password) => {\r\n    const sha = new JsSha('SHA3-224', 'TEXT');\r\n    sha.update(password);\r\n    return sha.getHash('HEX');\r\n};\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            type: 0,\r\n            userTelephone: '',\r\n            userPassword: '',\r\n            userCode: '',\r\n            userAccount: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('auth')) {\r\n            this.props.history.push('/admin/homepage')\r\n        }\r\n    }\r\n\r\n    usertelephoneCheck(e) {\r\n        this.setState({\r\n            userTelephone: e.target.value, \r\n        })\r\n    }\r\n    userpasswordCheck(e) {\r\n        this.setState({\r\n            userPassword: e.target.value,\r\n        })\r\n    }\r\n    usercodeCheck(e) {\r\n        this.setState({\r\n            userCode: e.target.value,\r\n        })\r\n    }\r\n    useraccountCheck(e) {\r\n        this.setState({\r\n            userAccount: e.target.value,\r\n        })\r\n    }\r\n\r\n    handleSubmit=e=>{\r\n        this.formRef.current.validateFields()\r\n                .then(values => {\r\n                    this.formRef.current.resetFields();\r\n                    this.goToLink(this);\r\n                })\r\n                .catch(info=>{\r\n                  console.log('Validate failed:', info);\r\n                })\r\n    }\r\n\r\n    goToLink() {\r\n        const data={}\r\n        data.type=this.state.type\r\n        data.code=this.state.userCode\r\n        data.username=this.state.userAccount\r\n        data.phone=this.state.userTelephone\r\n        data.password=hashPassword(this.state.userPassword)\r\n        login(data).then(res=>{\r\n            const { data } = res\r\n            localStorage.setItem(\"auth\", data)\r\n            getUserInfo().then(res=>{\r\n                const { data } = res\r\n                localStorage.setItem(\"userInfo\", data)\r\n                console.log(res)\r\n            })\r\n            console.log(data)\r\n            this.props.history.push('/admin/homepage')\r\n        })\r\n        \r\n    }\r\n\r\n    formRef = React.createRef();\r\n\r\n    loginType() {\r\n        if (this.state.type === 0)\r\n        {\r\n            return this.telephoneLogin()\r\n        }\r\n        if (this.state.type === 1)\r\n        {\r\n            return this.accountLogin()\r\n        }\r\n        \r\n    }\r\n\r\n    telephoneLogin=()=> {\r\n        return (\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-telephone'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='telephone'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入手机号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='手机号'\r\n                          value={this.state.userTelephone}\r\n                          onChange={this.usertelephoneCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    accountLogin=()=> {\r\n        return(\r\n            <Form ref={this.formRef}\r\n                      name='normal_login'\r\n                      className='login-area-account'\r\n                      initialValues={{\r\n                          remember: true,\r\n                      }}\r\n                    >\r\n                        <FormItem\r\n                            name='code'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入工厂代码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<HomeOutlined className='site-form-item-icon' />} \r\n                          placeholder='工厂代码'\r\n                          value={this.state.userCode}\r\n                          onChange={this.usercodeCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='account'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入账号',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<UserOutlined className='site-form-item-icon' />} \r\n                          placeholder='账号'\r\n                          value={this.state.userAccount}\r\n                          onChange={this.useraccountCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem\r\n                            name='password'\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: '请输入密码',\r\n                                },\r\n                            ]}\r\n                        >\r\n                        <Input \r\n                          prefix={<LockOutlined className='site-form-item-icon' />} \r\n                          type='password' \r\n                          placeholder='密码'\r\n                          value={this.state.userPassword}\r\n                          onChange={this.userpasswordCheck.bind(this)}\r\n                          />\r\n                        </FormItem>\r\n                        <FormItem>\r\n                        <Button type='primary' onClick={this.handleSubmit} className='login-button'>登录</Button>\r\n                        </FormItem>\r\n                        <FormItem name='remember' valuePropName='checked' noStyle>\r\n                            <Checkbox>保持登录</Checkbox>\r\n                        </FormItem>\r\n                    </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='loginarea'>\r\n                <div className='loginlogo' />\r\n                <div className='login-form'>\r\n                    <div className='login-header'>\r\n                        <div className='login-title'>\r\n                            登录小工单\r\n                        </div>\r\n                    </div>\r\n                    <div className='login-content'>\r\n                        <div className='login-type'>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 0})}} \r\n                              style={this.state.type === 0 ? {color:'blue'}:{}}>\r\n                              手机号登录</a>\r\n                            <a \r\n                              onClick={()=>{this.setState({type: 1})}}\r\n                              style={this.state.type === 1 ? {color:'blue'}:{}}>\r\n                              工厂账号登录</a>\r\n                        </div>\r\n                        {this.loginType()}\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","E:\\react\\demo-project\\src\\views\\admin\\homepage.js",["78"],"import React, { Component } from 'react';\r\nimport { login } from '../../api/index'\r\nimport JsSha from 'jssha';\r\n\r\nexport const hashPassword = (password) => {\r\n    const sha = new JsSha('SHA3-224', 'TEXT');\r\n    sha.update(password);\r\n    return sha.getHash('HEX');\r\n};\r\n\r\nclass homepage extends Component {\r\n\r\n    \r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <h1>zhuye</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default homepage;","E:\\react\\demo-project\\src\\layout\\layout.js",["79"],"import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb, Dropdown } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { mainRoutes } from '../routes/index'\r\nimport {\r\n    SolutionOutlined,\r\n    LaptopOutlined,\r\n    ReadOutlined,\r\n    UserOutlined,\r\n} from '@ant-design/icons';\r\nimport './layout.css'\r\n\r\nconst { Sider, Content, Header } = Layout\r\nconst { SubMenu } = Menu\r\n\r\nfunction layout(props) {\r\n    const logout = ( \r\n        <Menu>\r\n            <Menu.Item key='logOut'>\r\n                <Link \r\n                  to=\"/login\" \r\n                  onClick={()=>{localStorage.removeItem('auth')}}\r\n                >退出\r\n                </Link>\r\n            </Menu.Item>\r\n        </Menu>\r\n    )\r\n  \r\n    const routes = mainRoutes\r\n    function itemRender(route, params, routes, paths) {\r\n        \r\n        // const last = routes.indexOf(route) === routes.length - 1;\r\n        // return last ? (\r\n        //   <span>{route.breadcrumbName}</span>\r\n        // ) : (\r\n        //   <Link to={paths.join(\"/\")}>{route.breadcrumbName}</Link>\r\n        // );\r\n        if (props.children._owner.pendingProps.location.pathname === route.path) {\r\n            return(<span>{route.breadcrumbName}</span>)\r\n        }\r\n      }\r\n    \r\n      \r\n    \r\n    return (\r\n        <Layout style={{minHeight: '100vh' }}>\r\n            <Sider>\r\n                <div className='logo'>\r\n                    小工单\r\n                </div>\r\n                <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\r\n                    <Menu.Item key='1' icon={<SolutionOutlined />}>\r\n                        <Link to=\"/admin/homepage\">\r\n                            主页\r\n                        </Link>\r\n                    </Menu.Item>\r\n                    <SubMenu key='sub1' icon={<LaptopOutlined />} title='生产管理'>\r\n                        <Menu.Item key='2'><Link to=\"/admin/gongdan\">工单</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub2' icon={<ReadOutlined />} title='基础数据'>\r\n                        <Menu.Item key='3'><Link to=\"/admin/wuliao\">物料</Link></Menu.Item>\r\n                        <Menu.Item key='4'><Link to=\"/admin/gongxu\">工序</Link></Menu.Item>\r\n                        <Menu.Item key='5'><Link to=\"/admin/danwei\">单位</Link></Menu.Item>\r\n                        <Menu.Item key='6'><Link to=\"/admin/cipin\">次品项</Link></Menu.Item>\r\n                    </SubMenu>\r\n                    <SubMenu key='sub3' icon={<LaptopOutlined />} title='系统配置'>\r\n                        <Menu.Item key='7'><Link to=\"/admin/yonghu\">用户</Link></Menu.Item>\r\n                    </SubMenu>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout className='container'>\r\n                <Header className='site-header'>               \r\n                    <Breadcrumb className='site-breadcrumb' itemRender={itemRender} routes={routes} />\r\n                    <Dropdown overlay={logout}>\r\n                        <div>\r\n                            <UserOutlined />\r\n                            <span>系统管理员</span>\r\n                        </div>\r\n                    </Dropdown>\r\n                </Header>\r\n                <Content>\r\n                    <div>\r\n                        {props.children}\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    )\r\n    \r\n}\r\n\r\nexport default layout","E:\\react\\demo-project\\src\\views\\admin\\wuliao.js",["80","81","82","83","84","85","86"],"E:\\react\\demo-project\\src\\views\\admin\\gongxu.js",["87","88","89","90","91","92","93","94","95"],"E:\\react\\demo-project\\src\\views\\admin\\gongdan.js",["96","97","98","99","100","101","102","103"],"E:\\react\\demo-project\\src\\views\\admin\\danwei.js",["104","105","106"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Space } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { insertUnit, deleteUnit, getUnitList, compileUnit } from '../../api/index'\r\n\r\nconst { TextArea } = Input\r\n\r\nclass danwei extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n                key: 'id',\r\n                render: (txt,record,index)=>index + 1\r\n\r\n            }, {\r\n                title: '名称',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '备注',\r\n                dataIndex: 'remark'\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space key={index}>\r\n                    <a \r\n                      data-index={index}\r\n                      onClick={()=>{this.setState({editInfo:record,modalAddInfoVisible:true})}}\r\n                      >编辑</a> \r\n                     \r\n                    <a data-index={index} \r\n                       onClick={()=>{this.handleDelete(record)}}\r\n                    >删除</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            editInfo: {\r\n              name: '',\r\n              remark: '',\r\n            },\r\n            searchInfo: {\r\n              searchName: '',\r\n              searchRemark: '',\r\n            },\r\n            page: {\r\n              size: 10,\r\n              page: 1,\r\n            },\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setData()\r\n    }\r\n\r\n    handleOk = e => {\r\n      const { editInfo } = this.state\r\n      if (!editInfo.name) {\r\n        alert(\"名称不能为空\")\r\n        return\r\n      }\r\n      this.updateUnit(editInfo)\r\n    }\r\n\r\n    setData = (newPages={}) => {\r\n        const {page,size} = newPages\r\n        const {searchInfo} = this.state\r\n        const param = {\r\n            ...searchInfo,\r\n            page: {\r\n                page: page || this.state.page.page,\r\n                size: size || this.state.page.size\r\n            }   \r\n        }\r\n        getUnitList(param). then(res=>\r\n          {\r\n              const { data, page, size, count } = res\r\n              this.setState({data, page:{page, size}, total: count}, ()=>\r\n              {\r\n                console.log(this.state.page)\r\n              })\r\n          })\r\n    }\r\n\r\n    onTableChange = (pagination, filters, sorter, extra) => {\r\n        this.setData({\r\n            page: pagination.current,\r\n            pageSize: pagination.pageSize\r\n        })\r\n        console.log(pagination, filters, sorter, extra)\r\n    }\r\n\r\n    onQuery = () => {\r\n        this.setData({page: 1, size: 10})\r\n    }\r\n\r\n    clearAction() {\r\n        this.setState({\r\n            editInfo: {\r\n                name: '',\r\n                remark: '',\r\n            },\r\n            modalAddInfoVisible: false,\r\n        })\r\n    }\r\n\r\n    updateUnit(unit) {\r\n        if (unit.id) {\r\n            compileUnit(unit).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        } else{\r\n            insertUnit(unit).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = (record) => {\r\n        const id = record.id\r\n        deleteUnit(id).then(res=>{\r\n            this.clearAction()\r\n            this.setData()\r\n        })\r\n    }\r\n\r\n    nameInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, name: e.target.value},\r\n        })\r\n    }\r\n    remarkInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo:{...editInfo, remark: e.target.value},\r\n        })\r\n    }\r\n    searchnameInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n              searchInfo: {...searchInfo, searchName: e.target.value}\r\n        })\r\n    }\r\n    searchremarkInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n              searchInfo: {...searchInfo, searchRemark: e.target.value}\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const { data, columns, editInfo, searchInfo, modalAddInfoVisible, page, total } = this.state\r\n        const _pagination = { current: page.page, size: page.size, total}\r\n        console.log(page, _pagination)\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchdanwei'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                          value={searchInfo.searchName} \r\n                          placeholder=\"请输入名称\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchnameInput.bind(this)} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input \r\n                          value={searchInfo.searchRemark} \r\n                          placeholder=\"请输入编号\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchremarkInput.bind(this)} />\r\n                    </div>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<SearchOutlined />}\r\n                      onClick={this.onQuery} >查询</Button>\r\n                </div>\r\n                <div className='createdanwei'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />} \r\n                      onClick={()=>this.setState({modalAddInfoVisible: true})}\r\n                    >创建单位</Button>\r\n                    <Modal \r\n                      visible={modalAddInfoVisible} \r\n                      title={editInfo.id? \"编辑单位\":\"创建单位\"} \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.clearAction()}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                            placeholder=\"请输入\"\r\n                            value={editInfo.name}\r\n                            onChange={this.nameInput.bind(this)}\r\n                        />\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <TextArea \r\n                            row={4}\r\n                            value={editInfo.remark}\r\n                            onChange={this.remarkInput.bind(this)}  \r\n                        />    \r\n                    </Modal>\r\n                </div>\r\n                <div className='danweitable'>\r\n                    <Table \r\n                      columns={columns} \r\n                      dataSource={data} \r\n                      pagination={_pagination} \r\n                      onChange={this.onTableChange}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default danwei;","E:\\react\\demo-project\\src\\views\\admin\\cipin.js",["107","108"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Modal, Space } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n    PlusCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { getinferiorQuality, insertinferiorQuality, compileferiorQuality, deleteinferiorQuality } from '../../api/index'\r\n\r\nclass cipin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n                key: 'id',\r\n                render: (txt,record,index)=>index + 1\r\n            }, {\r\n                title: '次品项编号',\r\n                dataIndex: 'code',\r\n                key: 'code',\r\n            }, {\r\n                title: '次品项名称',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space key={index}>\r\n                    <a \r\n                      data-index={index}\r\n                      onClick={()=>{this.setState({editInfo:record,modalAddInfoVisible:true})}}\r\n                    >编辑</a>  \r\n                    <a \r\n                      data-index={index} \r\n                      onClick={()=>{this.handleDelete(record)}}\r\n                    >删除</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            editInfo: {\r\n                code: '',\r\n                name: '',\r\n            },\r\n            searchInfo: {\r\n                searchCode: '',\r\n                searchName: '',\r\n            },\r\n            page: {\r\n                size: 10,\r\n                page: 1\r\n            },\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setData()\r\n    }\r\n\r\n    clearAction() {\r\n        this.setState({\r\n            editInfo: {\r\n                code: '',\r\n                name: '',\r\n            },\r\n            modalAddInfoVisible: false,\r\n        })\r\n    }\r\n\r\n    handleOk = e => {\r\n        const { editInfo } = this.state\r\n        if (!editInfo.code) {\r\n            alert('编号不能为空')\r\n            return\r\n        }\r\n        if (!editInfo.name) {\r\n            alert('名称不能为空')\r\n            return\r\n        }\r\n        this.updateQuality(editInfo)\r\n    }\r\n\r\n    setData = (newPages={}) => {\r\n        const {page,size} = newPages\r\n        const {searchInfo} = this.state\r\n        const param = {\r\n            ...searchInfo,\r\n            page: {\r\n                page: page || this.state.page.page,\r\n                size: size || this.state.page.size\r\n            }\r\n        }\r\n        getinferiorQuality(param).then(res=>\r\n            {\r\n                const { data, page, size, count } = res\r\n                this.setState({data, page:{page, size}, total: count})\r\n            })\r\n    }\r\n    \r\n    onTableChange = (pagination, filters, sorter, extra) => {\r\n        this.setData({\r\n            page: pagination.current,\r\n            pageSize: pagination.pageSize\r\n        })\r\n        console.log(pagination, filters, sorter, extra)\r\n    }\r\n\r\n    onQuery = () => {\r\n        this.setData({page:1, size:10})\r\n    }\r\n\r\n    updateQuality(quality) {\r\n        if (quality.id) {\r\n            compileferiorQuality(quality).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            }) \r\n        } else {\r\n            insertinferiorQuality(quality).then(res=>{\r\n                this.clearAction()\r\n                this.setData()\r\n            })\r\n        }\r\n    }\r\n    \r\n    handleDelete = (record) => {\r\n        const id = record.id\r\n        deleteinferiorQuality(id).then(()=>{\r\n            this.clearAction()\r\n            this.setData()\r\n        })\r\n    }\r\n\r\n    codeInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, code: e.target.value}\r\n        })\r\n    }\r\n    nameInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, name: e.target.value}\r\n        })\r\n    }\r\n    searchcodeInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n            searchInfo: {...searchInfo, searchCode: e.target.value}\r\n        })\r\n    }\r\n    searchnameInput(e) {\r\n        const { searchInfo } = this.state\r\n        this.setState({\r\n            searchInfo: {...searchInfo, searchName: e.target.value}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { data, columns, editInfo, searchInfo, modalAddInfoVisible, page, total } = this.state\r\n        const _pagination = {current: page.page, size: page.size, total}\r\n        console.log(page, _pagination)\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchcipin'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>名称 </label>\r\n                        <Input \r\n                          value={searchInfo.searchName} \r\n                          placeholder=\"请输入名称\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchnameInput.bind(this)} />\r\n                    </div>\r\n                    <div className='searchcode'>\r\n                        <label htmlFor='name'>备注 </label>\r\n                        <Input \r\n                          value={searchInfo.searchCode} \r\n                          placeholder=\"请输入编号\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchcodeInput.bind(this)} />\r\n                    </div>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<SearchOutlined />}\r\n                      onClick={this.onQuery}>查询</Button>\r\n                </div>\r\n                <div className='createcipin'>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<PlusCircleOutlined />} \r\n                      onClick={()=>this.setState({modalAddInfoVisible: true})}\r\n                    >创建次品项</Button>\r\n                    <Modal \r\n                      visible={modalAddInfoVisible} \r\n                      title={editInfo.id? \"编辑次品项\":\"创建次品项\"}\r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.clearAction()}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                        <label htmlFor='code'>次品项编号 </label>\r\n                        <Input \r\n                          placeholder=\"请输入\"\r\n                          value={editInfo.code}\r\n                          onChange={this.codeInput.bind(this)}/>\r\n                        <label htmlFor='name'>次品项名称 </label>     \r\n                        <Input \r\n                          placeholder=\"请输入\"\r\n                          value={editInfo.name}\r\n                          onChange={this.nameInput.bind(this)}/>\r\n                               \r\n                    </Modal>\r\n                </div>\r\n                <div className='cipintable'>\r\n                    <Table \r\n                      columns={columns} \r\n                      dataSource={data} \r\n                      pagination={_pagination}\r\n                      onChange={this.onTableChange}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default cipin;","E:\\react\\demo-project\\src\\views\\admin\\yonghu.js",["109","110","111","112","113","114","115","116","117","118"],"import React, { Component } from 'react';\r\nimport { Input, Button, Table, Select, Modal, Form, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport {\r\n    SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport '../style/style.css'\r\nimport { \r\n  addUser, \r\n  getUserInfo, \r\n  getUserList, \r\n  editUser, \r\n  blockUser, \r\n  enableUser, \r\n  changePassword, \r\n  getUserRoles \r\n} from '../../api/index'\r\nimport Item from 'antd/lib/list/Item';\r\n\r\nconst { Option } = Select\r\n\r\nclass yonghu extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            columns: [{\r\n                title: '序号',\r\n                dataIndex: 'sqno',\r\n                key: 'id',\r\n                render: (txt,record,index)=>index + 1\r\n            }, {\r\n                title: '账号',\r\n                dataIndex: 'username',\r\n            }, {\r\n                title: '姓名',\r\n                dataIndex: 'name',\r\n            }, {\r\n                title: '手机号',\r\n                dataIndex: 'phone',\r\n            }, {\r\n                title: '角色',\r\n                dataIndex: 'role',\r\n            }, {\r\n                title: '虚拟账户',\r\n                dataIndex: 'fake',\r\n            }, {\r\n                title: '状态',\r\n                dataIndex: 'status',\r\n            }, {\r\n                title: '操作',\r\n                dataIndex: 'delete',\r\n                key: 'delete',\r\n                render: (text,record,index) => \r\n                (\r\n                  <Space key={index}>\r\n                    <a \r\n                      data-index={index}\r\n                      onClick={()=>{\r\n                          blockUser(record.id).then(res=>{\r\n\r\n                          })\r\n                      }\r\n                    }\r\n                    >停用</a>  \r\n                    <a \r\n                      data-index={index} \r\n                      onClick={()=>{this.setState({editInfo:record,modalAddInfoVisible:true})}}\r\n                    >编辑</a>\r\n                    <a \r\n                      data-index={index} \r\n                      // onClick={}\r\n                    >重置密码</a>\r\n                  </Space>\r\n                )\r\n            }],\r\n            data: [],\r\n            modalAddInfoVisible: false,\r\n            editInfo: {\r\n              username: '',\r\n              name: '',\r\n              fake: false,\r\n              phone: '',\r\n              roleIds: [0],\r\n            },\r\n            searchInfo: {\r\n              name:'',\r\n            },\r\n            page: {\r\n              size: 10,\r\n              page: 1,\r\n            },\r\n            selectList: [],\r\n            total: 0\r\n          }\r\n    }\r\n\r\n    componentDidMount(user) {\r\n       this.setData()\r\n       getUserRoles(user).then(res=>{\r\n        const {data} = res\r\n        this.setState({selectList:data})\r\n        console.log(this.state.selectList)\r\n       })\r\n    }\r\n    \r\n    handleOk = e => {\r\n      const { editInfo } = this.state\r\n      if (!editInfo.username) {\r\n        alert(\"账号不能为空\")\r\n        return\r\n      }\r\n      if (!editInfo.name) {\r\n        alert(\"姓名不能为空\")\r\n        return\r\n      }\r\n      this.updateUser(editInfo)\r\n    }\r\n    \r\n    setData = (newPages={}) => {\r\n      const {page,size} = newPages\r\n      const {searchInfo} = this.state\r\n      const param = {\r\n          ...searchInfo,\r\n              page: page || this.state.page.page,\r\n              size: size || this.state.page.size \r\n      }\r\n      getUserList(param). then(res=>\r\n        {\r\n            const { data, page, size, count } = res\r\n            this.setState({data, page:{page, size}, total: count}, ()=>\r\n            {\r\n              console.log(this.state.page)\r\n            })\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    onTableChange = (pagination, filters, sorter, extra) => {\r\n      this.setData({\r\n          page: pagination.current,\r\n          pageSize: pagination.pageSize\r\n      })\r\n      console.log(pagination, filters, sorter, extra)\r\n  }\r\n\r\n    onQuery = () => {\r\n      this.setData({page: 1, size: 10})\r\n    }\r\n\r\n    clearAction() {\r\n      this.setState({\r\n          editInfo: {\r\n              name: '',\r\n              remark: '',\r\n          },\r\n          modalAddInfoVisible: false,\r\n      })\r\n    }\r\n    \r\n    updateUser(user) {\r\n        \r\n        if (user.id) {\r\n          const id = user.id\r\n          editUser(id, user).then(res=>{\r\n            this.clearAction()\r\n            this.setData()\r\n          })\r\n\r\n        } else {\r\n          addUser(user).then(res=>{\r\n            this.clearAction()\r\n            this.setData()\r\n          })\r\n        }\r\n    \r\n    }\r\n\r\n    handleChange = (value) => {\r\n        console.log(value)\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n          editInfo: {...editInfo, roleIds: value}\r\n        })\r\n        console.log('roleIds: ', this.state.editInfo.roleIds)\r\n        \r\n    }\r\n\r\n    \r\n    usernameInput(e) {\r\n      const { editInfo } = this.state\r\n      this.setState({\r\n        editInfo: {...editInfo, username: e.target.value},\r\n      })\r\n    }\r\n    nameInput(e) {\r\n      const { editInfo } = this.state\r\n      this.setState({\r\n        editInfo: {...editInfo, name: e.target.value},\r\n      })\r\n    }\r\n    phoneInput(e) {\r\n      const { editInfo } = this.state\r\n      this.setState({\r\n        editInfo: {...editInfo, phone: e.target.value},\r\n      })\r\n    }\r\n    fakeInput(e){\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, fake: e},\r\n        })\r\n        console.log(e)\r\n    }\r\n    searchnameInput(e) {\r\n      const { searchInfo } = this.state\r\n      this.setState({\r\n        searchInfo: {...searchInfo, name: e.target.value}\r\n      })\r\n    }\r\n\r\n    render() { \r\n      const { data, columns, editInfo, selectList, searchInfo, modalAddInfoVisible, page, total } = this.state\r\n      const _pagination = { current: page.page, size: page.size, total}\r\n      console.log(page, _pagination)\r\n\r\n        return (\r\n            <div>\r\n                <div className='searchyonghu'>\r\n                    <div className='searchname'>\r\n                        <label htmlFor='name'>姓名 </label>\r\n                        <Input \r\n                          value={searchInfo.name}\r\n                          placeholder=\"请输入名称\" \r\n                          style={{ width: '85%' }}\r\n                          onChange={this.searchnameInput.bind(this)} />\r\n                    </div>\r\n                    <div className='selectstatus'>\r\n                        <label htmlFor='name'>状态 </label>\r\n                        <Select defaultValue=\"all\" style={{ width: 182 }}>\r\n                            <Option value=\"all\">全部</Option>\r\n                            <Option value=\"start\">启用中</Option>\r\n                            <Option value=\"stop\">停用中</Option>\r\n                        </Select>\r\n                    </div>\r\n                    <Button \r\n                      type='primary' \r\n                      icon={<SearchOutlined />}\r\n                      onClick={this.onQuery}\r\n                    >查询</Button>\r\n                </div>\r\n                <div className='createyonghu'>\r\n                    <Button \r\n                      type='primary' \r\n                      onClick={()=>this.setState({modalAddInfoVisible: true})} \r\n                    >新增用户</Button>\r\n                    <Modal \r\n                      visible={modalAddInfoVisible} \r\n                      title={editInfo.id? \"编辑用户\":\"新建用户\"} \r\n                      cancelText=\"取消\" \r\n                      onCancel={()=>{this.clearAction()}}\r\n                      okText=\"确定\" \r\n                      onOk={this.handleOk}\r\n                    >\r\n                            <label htmlFor='username'>账号 </label>\r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={editInfo.username}\r\n                              onChange={this.usernameInput.bind(this)} />\r\n                            <label htmlFor='name'>姓名 </label>\r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={editInfo.name}\r\n                              onChange={this.nameInput.bind(this)}/>\r\n                            <label htmlFor='phone'>手机号 </label>\r\n                            <Input \r\n                              placeholder=\"请填写\"\r\n                              value={editInfo.phone}\r\n                              onChange={this.phoneInput.bind(this)}/>\r\n                            <label htmlFor='role'>角色 </label>\r\n                            <Select\r\n                              value={editInfo.roleIds}\r\n                              style={{ width: '100%' }}\r\n                              mode=\"multiple\"\r\n                              allowClear\r\n                              placeholder=\"请选择\"\r\n                              onChange={this.handleChange}\r\n                            >\r\n                                {selectList.map(item=>{\r\n                                    return (<Option key={item.id} value={item.id}>\r\n                                        {item.name}\r\n                                    </Option>)\r\n                                })}\r\n                            </Select>\r\n                            <label htmlFor='fake'>虚拟用户 </label>\r\n                            <Select \r\n                               style={{ width: '100%' }}\r\n                               value={editInfo.fake}\r\n                               onChange={this.fakeInput.bind(this)}\r\n                            >\r\n                                <Option value={true}>是</Option>\r\n                                <Option value={false}>否</Option>\r\n                            </Select>\r\n                               \r\n                    </Modal>\r\n                </div>\r\n                <div className='yonghutable'>\r\n                    <Table \r\n                      columns={columns} \r\n                      dataSource={data} \r\n                      pagination={_pagination} \r\n                      onChange={this.onTableChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default yonghu;","E:\\react\\demo-project\\src\\views\\admin\\wuliaocreate.js",["119","120","121","122"],"import React, { Component } from 'react';\r\nimport { Input, Button, Select, Form } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport 'antd/dist/antd.css';\r\nimport '../style/style.css'\r\nimport {getMaterialList, insertMateriel, updateMateriel, deleteMateriel, getMaterialInfo} from '../../api/index'\r\n\r\nconst { Option } = Select\r\n\r\nclass wuliaocreate extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data:[],\r\n            editInfo: {\r\n                code: '',\r\n                name: '',\r\n                specification: '',\r\n                unitId: 147,\r\n                customFieldValues: [],\r\n                createdAt: '',\r\n                creatorName: '',\r\n                updatedAt: '',\r\n            },\r\n            createOrEdit: 'create',\r\n        }    \r\n    }\r\n\r\n    componentDidMount() {\r\n        const code = this.props.match.params.code\r\n        console.log(code)\r\n        if (code) {\r\n            this.getData(code)\r\n            this.setState({createOrEdit: 'edit'})\r\n        }\r\n    }\r\n\r\n    getData = (code) => {\r\n        getMaterialInfo({code}).then(res=>{\r\n            const {data} = res\r\n            this.setState({\r\n                editInfo: data\r\n            })\r\n            console.log(this.state.editInfo)\r\n            console.log(this.state.editInfo.unit)\r\n        })\r\n        \r\n    }\r\n\r\n    handleOk = e => {\r\n        const { editInfo, createOrEdit } = this.state\r\n        console.log(editInfo)\r\n        if (!editInfo.name) {\r\n          alert(\"名称不能为空\")\r\n          return\r\n        }\r\n        if (!editInfo.code) {\r\n            alert(\"编号不能为空\")\r\n            return\r\n        }\r\n        if (createOrEdit === 'edit') {\r\n            \r\n            this.editMaterial()\r\n        } else {\r\n            this.createMaterial()\r\n        }  \r\n        this.props.history.push(\"/admin/wuliao\")\r\n    }\r\n\r\n    editMaterial() {\r\n        \r\n        const data={}\r\n        data.id=this.state.editInfo.id\r\n        data.unit=this.state.editInfo.unit\r\n        data.code=this.state.editInfo.code\r\n        data.name=this.state.editInfo.name\r\n        data.unitId=147\r\n        data.specification=this.state.editInfo.specification\r\n        data.customFieldValues=this.state.customFieldValues\r\n        updateMateriel(data).then(res=>{\r\n            const { data } = res\r\n            console.log(data)\r\n        })\r\n    }\r\n    \r\n    createMaterial() {\r\n        const data={}\r\n        data.code=this.state.editInfo.code\r\n        data.name=this.state.editInfo.name\r\n        data.unitId=this.state.editInfo.unitId\r\n        data.specification=this.state.editInfo.specification\r\n        insertMateriel(data).then(res=>{\r\n            const { data } = res\r\n            localStorage.setItem(\"createInfo\", data)\r\n            console.log(data)\r\n        })\r\n    }\r\n\r\n    clearAction() {\r\n        this.setState({\r\n            editInfo: {\r\n                name: '',\r\n                remark: '',\r\n            },\r\n            modalAddInfoVisible: false,\r\n        })\r\n    }\r\n\r\n    codeInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, code: e.target.value},\r\n        })\r\n    }\r\n    nameInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, name: e.target.value},\r\n        })\r\n    }\r\n    unitInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, unit: e.target.value},\r\n        })\r\n    }\r\n    specInput(e) {\r\n        const { editInfo } = this.state\r\n        this.setState({\r\n            editInfo: {...editInfo, specification: e.target.value},\r\n        })\r\n    }\r\n\r\n    render() { \r\n        const { editInfo, createOrEdit } = this.state\r\n\r\n        return (\r\n            <div className='createwuliaopage'>\r\n                <div className='createwuliaotitle'>\r\n                    <span>{createOrEdit === 'create' ? '创建' : '编辑'}物料</span>\r\n                </div>\r\n                <div className='createwuliaoarea'>\r\n                    <div className='createwuliaoinput'>  \r\n                            <label htmlFor='name'>产品编号 </label>\r\n                            <Input \r\n                              placeholder=\"请输入\"\r\n                              value={editInfo.code}\r\n                              onChange={this.codeInput.bind(this)}\r\n                            />\r\n                            <label htmlFor='name'>产品名称 </label>\r\n                            <Input \r\n                              placeholder=\"请输入\"\r\n                              value={editInfo.name}\r\n                              onChange={this.nameInput.bind(this)}\r\n                            />\r\n                            <label htmlFor='name'>库存单位 </label>\r\n                            <Select \r\n                              style={{ width: '100%' }}\r\n\r\n                            >\r\n                                <Option value=\"1\">zzz</Option>\r\n                            </Select>\r\n                            <label htmlFor='name'>产品规格 </label>\r\n                            <Input \r\n                              placeholder=\"请输入\"\r\n                              value={editInfo.specification}\r\n                              onChange={this.specInput.bind(this)}\r\n                            />\r\n                           \r\n                    </div>\r\n                    <div className='createwuliaobutton'>\r\n                        <Button \r\n                          style={{ width: '40%' }} \r\n                          onClick={()=>{this.props.history.push(\"/admin/wuliao\")}}\r\n                        >取消</Button>\r\n                        <Button \r\n                          style={{ width: '40%' }} \r\n                          type='primary' onClick={this.handleOk}\r\n                        >保存</Button>\r\n                    </div> \r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default wuliaocreate;","E:\\react\\demo-project\\src\\views\\admin\\gongxucreate.js",["123","124","125","126"],"E:\\react\\demo-project\\src\\api\\index.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":233,"column":29,"nodeType":"133","endLine":235,"endColumn":81},{"ruleId":"131","severity":1,"message":"132","line":237,"column":29,"nodeType":"133","endLine":239,"endColumn":81},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":15},{"ruleId":"134","severity":1,"message":"138","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":9,"column":26,"nodeType":"136","messageId":"137","endLine":9,"endColumn":40},{"ruleId":"134","severity":1,"message":"140","line":9,"column":42,"nodeType":"136","messageId":"137","endLine":9,"endColumn":56},{"ruleId":"131","severity":1,"message":"132","line":48,"column":21,"nodeType":"133","endLine":52,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":53,"column":21,"nodeType":"133","endLine":56,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":97,"column":9,"nodeType":"143","messageId":"144","endLine":97,"endColumn":37,"fix":"145"},{"ruleId":"134","severity":1,"message":"146","line":166,"column":32,"nodeType":"136","messageId":"137","endLine":166,"endColumn":36},{"ruleId":"134","severity":1,"message":"147","line":166,"column":38,"nodeType":"136","messageId":"137","endLine":166,"endColumn":46},{"ruleId":"134","severity":1,"message":"148","line":11,"column":5,"nodeType":"136","messageId":"137","endLine":11,"endColumn":15},{"ruleId":"134","severity":1,"message":"149","line":12,"column":5,"nodeType":"136","messageId":"137","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"150","line":14,"column":5,"nodeType":"136","messageId":"137","endLine":14,"endColumn":21},{"ruleId":"131","severity":1,"message":"132","line":50,"column":21,"nodeType":"133","endLine":53,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":54,"column":21,"nodeType":"133","endLine":57,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":89,"column":9,"nodeType":"143","messageId":"144","endLine":89,"endColumn":36,"fix":"151"},{"ruleId":"134","severity":1,"message":"146","line":149,"column":32,"nodeType":"136","messageId":"137","endLine":149,"endColumn":36},{"ruleId":"134","severity":1,"message":"147","line":149,"column":38,"nodeType":"136","messageId":"137","endLine":149,"endColumn":46},{"ruleId":"134","severity":1,"message":"152","line":149,"column":60,"nodeType":"136","messageId":"137","endLine":149,"endColumn":79},{"ruleId":"131","severity":1,"message":"132","line":73,"column":21,"nodeType":"133","endLine":73,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":74,"column":21,"nodeType":"133","endLine":74,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":75,"column":21,"nodeType":"133","endLine":75,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":76,"column":21,"nodeType":"133","endLine":76,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":77,"column":21,"nodeType":"133","endLine":77,"endColumn":43},{"ruleId":"141","severity":1,"message":"142","line":108,"column":9,"nodeType":"143","messageId":"144","endLine":108,"endColumn":38,"fix":"153"},{"ruleId":"134","severity":1,"message":"154","line":111,"column":29,"nodeType":"136","messageId":"137","endLine":111,"endColumn":36},{"ruleId":"134","severity":1,"message":"146","line":121,"column":32,"nodeType":"136","messageId":"137","endLine":121,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":36,"column":21,"nodeType":"133","endLine":39,"endColumn":24},{"ruleId":"131","severity":1,"message":"132","line":41,"column":21,"nodeType":"133","endLine":43,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":88,"column":9,"nodeType":"143","messageId":"144","endLine":88,"endColumn":33,"fix":"155"},{"ruleId":"131","severity":1,"message":"132","line":35,"column":21,"nodeType":"133","endLine":38,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":39,"column":21,"nodeType":"133","endLine":42,"endColumn":22},{"ruleId":"134","severity":1,"message":"156","line":2,"column":47,"nodeType":"136","messageId":"137","endLine":2,"endColumn":51},{"ruleId":"134","severity":1,"message":"157","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"158","line":11,"column":3,"nodeType":"136","messageId":"137","endLine":11,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":15,"column":3,"nodeType":"136","messageId":"137","endLine":15,"endColumn":13},{"ruleId":"134","severity":1,"message":"160","line":16,"column":3,"nodeType":"136","messageId":"137","endLine":16,"endColumn":17},{"ruleId":"134","severity":1,"message":"161","line":19,"column":8,"nodeType":"136","messageId":"137","endLine":19,"endColumn":12},{"ruleId":"131","severity":1,"message":"132","line":57,"column":21,"nodeType":"133","endLine":65,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":66,"column":21,"nodeType":"133","endLine":69,"endColumn":22},{"ruleId":"131","severity":1,"message":"132","line":70,"column":21,"nodeType":"133","endLine":73,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":128,"column":7,"nodeType":"143","messageId":"144","endLine":128,"endColumn":31,"fix":"162"},{"ruleId":"134","severity":1,"message":"156","line":2,"column":33,"nodeType":"136","messageId":"137","endLine":2,"endColumn":37},{"ruleId":"134","severity":1,"message":"157","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"163","line":6,"column":9,"nodeType":"136","messageId":"137","endLine":6,"endColumn":24},{"ruleId":"134","severity":1,"message":"164","line":6,"column":58,"nodeType":"136","messageId":"137","endLine":6,"endColumn":72},{"ruleId":"134","severity":1,"message":"156","line":2,"column":33,"nodeType":"136","messageId":"137","endLine":2,"endColumn":37},{"ruleId":"134","severity":1,"message":"157","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":16},{"ruleId":"134","severity":1,"message":"165","line":7,"column":3,"nodeType":"136","messageId":"137","endLine":7,"endColumn":17},{"ruleId":"134","severity":1,"message":"166","line":10,"column":3,"nodeType":"136","messageId":"137","endLine":10,"endColumn":16},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'insertMateriel' is defined but never used.","'updateMateriel' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"169","text":"170"},"'info' is assigned a value but never used.","'editInfo' is assigned a value but never used.","'addProcess' is defined but never used.","'updateProcess' is defined but never used.","'getProcessDetail' is defined but never used.",{"range":"171","text":"170"},"'modalAddInfoVisible' is assigned a value but never used.",{"range":"172","text":"170"},"'project' is assigned a value but never used.",{"range":"173","text":"170"},"'Form' is defined but never used.","'FormItem' is defined but never used.","'getUserInfo' is defined but never used.","'enableUser' is defined but never used.","'changePassword' is defined but never used.","'Item' is defined but never used.",{"range":"174","text":"170"},"'getMaterialList' is defined but never used.","'deleteMateriel' is defined but never used.","'getProcessList' is defined but never used.","'deleteProcess' is defined but never used.","no-global-assign","no-unsafe-negation",[2903,2905],".",[2502,2504],[3163,3165],[2432,2434],[3463,3465]]